<mah:MetroWindow x:Class="DispoDataAssistant.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:local="clr-namespace:DispoDataAssistant.UIComponents.Dialogs"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:bc="clr-namespace:DispoDataAssistant.UIComponents.BaseComponents"
                 xmlns:vm="clr-namespace:DispoDataAssistant.UIComponents.Main"
                 xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:e="clr-namespace:DispoDataAssistant.Extensions"
                 xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                 xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                 xmlns:system="clr-namespace:System;assembly=mscorlib"
                 mc:Ignorable="d"
                 Title="Dispo Assistant"
                 Height="Auto"
                 FontFamily="{materialDesign:MaterialDesignFont}"
                 TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                 TextElement.FontWeight="Medium"
                 TextElement.FontSize="14"
                 Background="{DynamicResource MaterialDesignPaper}"
                 Width="Auto"
                 WindowStyle="SingleBorderWindow"
                 WindowState="Maximized"
                 Closing="Window_Closing"
                 d:DataContext="{d:DesignInstance Type= vm:MainViewModel, IsDesignTimeCreatable=True}">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding MainWindow_LoadedCommand}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="MouseDoubleClick">
            <i:InvokeCommandAction Command="{Binding MainWindow_OnClickCommand}"
                                   PassEventArgsToCommand="True" />
        </i:EventTrigger>

    </i:Interaction.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="50"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="195" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <materialDesign:DialogHost Identifier="TabNameDialog"
                                   CloseOnClickAway="true"
                                   OverlayBackground="{DynamicResource PrimaryHueDarkBrush}"
                                   DialogTheme="Inherit"
                                   Style="{StaticResource MaterialDesignEmbeddedDialogHost}"
                                   DialogMargin="8"
                                   Grid.Row="1"
                                   Grid.RowSpan="2"
                                   Panel.ZIndex="10">
            <materialDesign:DialogHost.DialogContentTemplate>
                <DataTemplate DataType="{x:Type local:NewTabViewModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                                       Margin="0,20,0,10"
                                       Text="{Binding Title, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                       HorizontalAlignment="Center" />
                            <ToggleButton x:Name="TabNameVisibilitySelector"
                                          Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                          ToolTip="Default ToggleButton Style"
                                          IsChecked="{Binding IsTabNameToggled, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                          Visibility="{Binding ToggleVisibility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                          Margin="0,8" />
                            <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                     Margin="40,10"
                                     Width="200"
                                     materialDesign:HintAssist.Hint="New Tab Name"
                                     Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Visibility="{Binding ElementName=TabNameVisibilitySelector, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </StackPanel>
                        <StackPanel Name="ButtonPanel"
                                    Grid.Row="1"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Center">
                            <Button Name="AcceptButton"
                                    Margin="8"
                                    Style="{StaticResource MaterialDesignFlatButton}"
                                    IsDefault="true"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    Content="ACCEPT">
                                <Button.CommandParameter>
                                    <system:Boolean>true</system:Boolean>
                                </Button.CommandParameter>
                            </Button>
                            <Button Name="CancelButton"
                                    Margin="8"
                                    IsCancel="true"
                                    Style="{StaticResource MaterialDesignFlatButton}"
                                    Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                    Content="CANCEL" />

                        </StackPanel>

                    </Grid>
                </DataTemplate>
            </materialDesign:DialogHost.DialogContentTemplate>
        </materialDesign:DialogHost>
        <Button x:Name="ThemeChangerButton"
                Style="{StaticResource MaterialDesignToolButton}"
                Grid.Row="0"
                Margin="10"
                Content="{materialDesign:PackIcon Size=25,Kind=ThemeLightDark}"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding ChangeThemeCommand}"/>
        <StackPanel x:Name="ServiceNowQueryPanel"
                    Orientation="Horizontal"
                    FlowDirection="LeftToRight"
                    Grid.Row="1"
                    HorizontalAlignment="Center">
            <ComboBox x:Name="SearchByComboBox"
                      Style="{StaticResource MaterialDesignOutlinedComboBox}"
                      materialDesign:HintAssist.Hint="Search By"
                      ItemsSource="{Binding DeviceIdTypes}"
                      SelectedItem="{Binding SearchBy}"
                      Margin="0,0,0,0"/>
            <TextBox x:Name="DeviceIdTextBox"
                     Style="{StaticResource MaterialDesignOutlinedTextBox}"
                     materialDesign:HintAssist.IsFloating="True"
                     materialDesign:HintAssist.Hint="Search ServiceNow"
                     Text="{Binding DeviceId, UpdateSourceTrigger=PropertyChanged}"
                     FontSize="15"
                     IsTabStop="True"
                     TabIndex="1"
                     Margin="20,0"
                     MinWidth="300"
                     MinHeight="50">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="KeyDown">
                        <i:InvokeCommandAction Command="{Binding EnterPressedCommand}"
                                               PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <!--<stackpanel x:name="deviceidpanel">
                <label x:name="deviceidlabel"
                horizontalcontentalignment="center"
                content="device identifier"
                margin="20,0" />
            </stackpanel>-->
            <Button x:Name="QueryServiceNowButton"
                    Style="{StaticResource MaterialDesignToolButton }"
                    Content="{materialDesign:PackIcon Size=20, Kind=Search}"
                    Command="{Binding QueryServiceNowCommand}"
                    materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                    materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                    materialDesign:ButtonProgressAssist.Value="-1"
                    IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}"
                    Margin="-70,0,0,0"
                    IsTabStop="True"
                    TabIndex="2"/>

            <Button x:Name="AdvancedFilterButton"
                    Style="{StaticResource MaterialDesignToolButton}"
                    Content="{materialDesign:PackIcon Kind=FilterMenu,Size=25}" />

            <Button x:Name="SyncServiceNowButton"
                    Style="{StaticResource standardButton}"
                    Height="30"
                    Width="120"
                    VerticalAlignment="Bottom"
                    Content="Sync"
                    Command="{Binding SyncWithServiceNowCommand}"
                    Margin="20,0" />

            <Button x:Name="RetireServiceNowButton"
                    Style="{StaticResource standardButton}"
                    Height="30"
                    Width="120"
                    VerticalAlignment="Bottom"
                    Content="Retire"
                    Command="{Binding RetireAssetFromServiceNowCommand}"
                    Margin="20,0" />
        </StackPanel>

        <StackPanel x:Name="ViewPanePanel"
                    Grid.Row="2"
                    Margin="0,50,0,0">
            <StackPanel x:Name="TabControlPanel"
                        Orientation="Horizontal"
                        FlowDirection="RightToLeft"
                        HorizontalAlignment="Right"
                        Height="Auto"
                        Width="Auto"
                        VerticalAlignment="Bottom"
                        Margin="0,30,60,0">

                <Button x:Name="SettingsButton"
                        Style="{StaticResource MaterialDesignToolButton}"
                        Content="{materialDesign:PackIcon Size=25, Kind=Cog}"
                        Foreground="{DynamicResource PrimaryHueDarkBrush}"
                        Padding="10,0"
                        Command="{Binding ToggleSettingsMenuCommand}"/>

                <Button x:Name="AddTabButton"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        Foreground="{DynamicResource PrimaryHueDarkBrush}"
                        Content="{materialDesign:PackIcon Size=25, Kind=TabPlus}"
                        Padding="10,0"
                        Command="{Binding CreateTabCommand}"/>

                <Button x:Name="RemoveTabButton"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        Content="{materialDesign:PackIcon Size=25, Kind=TabRemove}"
                        Foreground="{DynamicResource PrimaryHueDarkBrush}"
                        Padding="10,0"
                        Command="{Binding DeleteTabCommand}" />

                <Button x:Name="RenameTabButton"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        Content="{materialDesign:PackIcon Size=25, Kind=RenameOutline}"
                        Foreground="{DynamicResource PrimaryHueDarkBrush}"
                        Padding="10,0"
                        Command="{Binding RenameTabCommand}"/>

                <Button x:Name="DownloadFileButton"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        Content="{materialDesign:PackIcon Size=25, Kind=Download}"
                        Foreground="{DynamicResource PrimaryHueDarkBrush}"
                        Padding="10,0"
                        Command="{Binding DownloadAssetsCommand}"/>

                <Button x:Name="UploadFileButton"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        Content="{materialDesign:PackIcon Size=25, Kind=Upload}"
                        Foreground="{DynamicResource PrimaryHueDarkBrush}"
                        Padding="10,0"
                        Command="{Binding UploadAssetsCommand}"/>
                <Button x:Name="SaveButton"
                        Style="{DynamicResource MaterialDesignToolButton}"
                        Content="{materialDesign:PackIcon Size=25, Kind=ContentSave}"
                        Foreground="{DynamicResource PrimaryHueDarkBrush}"
                        Padding="10,0"
                        Command="{Binding SaveAssetsCommand}"/>
            </StackPanel>
            <TabControl x:Name="ViewPaneTabControl"
                        Style="{StaticResource MaterialDesignNavigationRailTabControl}"
                        Margin="20,0"
                        Height="600"
                        ItemsSource="{Binding Tabs, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        SelectedIndex="{Binding SelectedTabIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        SelectedItem="{Binding SelectedTab, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        dd:DragDrop.IsDragSource="True"
                        dd:DragDrop.IsDropTarget="True"
                        dd:DragDrop.DropHandler="{Binding}">
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <DataGrid x:Name="ViewPaneDataGrid"
                                  BorderThickness="0"
                                  CanUserAddRows="True"
                                  CanUserDeleteRows="True"
                                  CanUserReorderColumns="True"
                                  CanUserSortColumns="True"
                                  CanUserResizeRows="True"
                                  CanUserResizeColumns="True"
                                  ItemsSource="{Binding ServiceNowAssets}"
                                  AutoGenerateColumns="False"
                                  EnableColumnVirtualization="True"
                                  SelectionMode="Extended"
                                  e:DataGridExtensions.SelectedItems="{Binding Path=DataContext.SelectedAssets, ElementName=ViewPaneTabControl, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                  SelectedItem="{Binding Path=DataContext.SelectedAsset, ElementName=ViewPaneTabControl, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Asset Tag"
                                                    Binding="{Binding AssetTag}" />
                                <DataGridTextColumn Header="Manufacturer"
                                                    Binding="{Binding Manufacturer}" />
                                <DataGridTextColumn Header="Model"
                                                    Binding="{Binding Model}" />
                                <DataGridTextColumn Header="Category"
                                                    Binding="{Binding Category}" />
                                <DataGridTextColumn Header="Serial Number"
                                                    Binding="{Binding SerialNumber}" />
                                <DataGridTextColumn Header="Life Cycle Stage"
                                                    Binding="{Binding LifeCycleStage}" />
                                <DataGridTextColumn Header="Life Cycle Status"
                                                    Binding="{Binding LifeCycleStatus}" />
                                <DataGridTextColumn Header="Last Updated"
                                                    Binding="{Binding LastUpdated}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        </StackPanel>
        <materialDesign:Snackbar MessageQueue="{Binding MessageQueue}" 
                                 Grid.Row="3"
                                 VerticalAlignment="Bottom"
                                 HorizontalAlignment="Center"/>
    </Grid>
</mah:MetroWindow>