// <auto-generated />
using System;
using DispoDataAssistant.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DispoDataAssistant.Migrations
{
    [DbContext(typeof(SettingsContext))]
    [Migration("20240121145317_AddIntegrationGeneralIds")]
    partial class AddIntegrationGeneralIds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("DispoDataAssistant.Data.Models.Settings.General", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SettingsId");

                    b.ToTable("General");
                });

            modelBuilder.Entity("DispoDataAssistant.Data.Models.Settings.Integration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SettingsId");

                    b.ToTable("Integrations");
                });

            modelBuilder.Entity("DispoDataAssistant.Data.Models.Settings.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GeneralId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IntegrationsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("DispoDataAssistant.Data.Models.Settings.General", b =>
                {
                    b.HasOne("DispoDataAssistant.Data.Models.Settings.Settings", "Settings")
                        .WithMany("General")
                        .HasForeignKey("SettingsId");

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("DispoDataAssistant.Data.Models.Settings.Integration", b =>
                {
                    b.HasOne("DispoDataAssistant.Data.Models.Settings.Settings", "Settings")
                        .WithMany("Integrations")
                        .HasForeignKey("SettingsId");

                    b.Navigation("Settings");
                });

            modelBuilder.Entity("DispoDataAssistant.Data.Models.Settings.Settings", b =>
                {
                    b.Navigation("General");

                    b.Navigation("Integrations");
                });
#pragma warning restore 612, 618
        }
    }
}
